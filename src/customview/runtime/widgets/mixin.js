/*
 * @Description: 
 * @Version: 1.0
 * @Autor: Luan Feng
 * @Date: 2020-11-19 11:28:54
 * @LastEditors: Luan Feng
 * @LastEditTime: 2020-11-21 12:03:03
 * @Tool: Auto Generated by koroFileHeader
 */
import { cloneDeep, merge } from 'lodash'
const mixinWidget = {
    props:{
        cfg:{
            type: Object,
            required:true
        }
    },
    data(){
        return {
            id:'',
            type:'',
            idParent:'',
            style:null,
            listen:null
        }
    },
    methods:{
        getValue(){
            return this.value
        },
        changeV(v){
            this.$cvr.emit(this.id + '_change', { value:v })
        },
        onCompReady(){            
            console.log(`widget - ${this.id} ready`)
            this.$cvr.emit(this.id + '_init',{ value: this.getValue() }) 
        },
        bindListenEvents(listen){
            if(listen && Array.isArray(listen) && listen.length > 0){
                this.$cvr.listenEvents(listen,this.id)
            }
        },
        cloneDeep(obj){
            return cloneDeep(obj)
        },
        merge(obj,...otherArgs){
            return merge(obj,...otherArgs)
        }
    },
    created(){
        this.id = this.cfg.id
        this.idParent = this.cfg.idParent        
        this.type = this.cfg.type
        this.style = { ...this.cfg.style }
        this.listen = cloneDeep(this.cfg.listen)
        console.log(`widget ${this.type} - ${this.id} - created`)
    },
    beforeMount(){
        this.$cvr.addComp(this.id, this)
        this.bindListenEvents(this.listen)
        this.$cvr.on(this.idParent + '_page_ready',this.onCompReady)
        this.$once('hook:beforeDestroy', ()=> {
            this.$cvr.off(this.idParent + '_page_ready',this.onCompReady)
            this.$cvr.removeComp(this.id)
        })
    }
}

export default mixinWidget